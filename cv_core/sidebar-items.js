initSidebarItems({"struct":[["CameraPoint","A 3d point which is relative to the camera’s optical center and orientation where the positive X axis is right, positive Y axis is down, and positive Z axis is forwards from the optical center of the camera. The unit of distance of a `CameraPoint` is unspecified and relative to the current reconstruction."],["CameraToCamera","This contains a relative pose, which is a pose that transforms the [`CameraPoint`] of one image into the corresponding [`CameraPoint`] of another image. This transforms the point from the camera space of camera `A` to camera `B`."],["CameraToWorld","This contains a camera pose, which is a pose of the camera relative to the world. This transforms camera points (with depth as `z`) into world coordinates. This also tells you where the camera is located and oriented in the world."],["FeatureMatch","Normalized keypoint match"],["FeatureWorldMatch","Normalized keypoint to world point match"],["KeyPoint","A point on an image frame. This type should be used when the point location is on the image frame in pixel coordinates. This means the keypoint is neither undistorted nor normalized."],["Skew3","Contains a member of the lie algebra so(3), a representation of the tangent space of 3d rotation. This is also known as the lie algebra of the 3d rotation group SO(3)."],["WorldPoint","A point in “world” coordinates. This means that the real-world units of the pose are unknown, but the unit of distance and orientation are the same as the current reconstruction."],["WorldToCamera","This contains a world pose, which is a pose of the world relative to the camera. This maps [`WorldPoint`] into [`CameraPoint`], changing an absolute position into a vector relative to the camera."]],"trait":[["Bearing","Describes the direction that the projection onto the camera’s optical center came from. It is implemented on projection items from different camera models. It is also implemented for `Unit<Vector3<f64>>` if you want to pre-compute the normalized bearings for efficiency or to turn all camera models into a unified type."],["CameraModel","Allows conversion between the point on an image and the internal projection which can describe the bearing of the projection out of the camera."],["ImagePoint","Allows the retrieval of the point on the image the feature came from."],["Pose","This trait is implemented by all the different poses in this library:"],["Projective","This trait is implemented for homogeneous projective 3d coordinate."],["TriangulatorObservances","This trait is for algorithms which allow you to triangulate a point from two or more observances. Each observance is a [`WorldToCamera`] and a [`Bearing`]."],["TriangulatorRelative","This trait allows you to take one relative pose from camera `A` to camera `B` and two bearings `a` and `b` from their respective cameras to triangulate a point from the perspective of camera `A`."]]});